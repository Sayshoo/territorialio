import struct
import time
import math
import messageTypes
import loghelper

PACKET_TYPEMASK = 0b11110000

globalStartIndex = 0

def logLine(line : str):
    loghelper.logLine("dataParser.log", line)

def h_lobbyConnect(data, origin):
    # global globalStartIndex
    # globalStartIndex = 4

    

    # clutter = unpackData(data, 14 + 4 + 1 + 1)

    # #globalStartIndex = 24
    # timestampBytes = unpackData(data, 11)
    # timestampBig= int.from_bytes(timestampBytes, "big")
    # obj = messageTypes.deserialize(data, messageTypes.lobbyConnect)
    # print(obj)
    # #obj["timeStampBytes"] = 0
    # #obj['verificationByte1'] = 926585723
    # #obj['verificationByte2'] = 236487355
    # #obj['verificationByte3'] = 80219911
    # #obj['verificationByte4'] = 387078350
    # #data = bytes(messageTypes.serialize(obj, obj["_schema_"]))
    # print(obj)

    # clutter2 = unpackData(data, 30 * 4)

    # #timestamp = 0

    # r = unpackData(data, 6)
    # g = unpackData(data, 6)
    # b = unpackData(data, 6)
    
    
    obj = messageTypes.deserialize(data, messageTypes.lobbyConnect)

    timestampBig = obj["timeStampBytes"]
    r = obj["r"]
    g = obj["g"]
    b = obj["b"]
    name = obj["name"].hex()


    #print("[%s:Lobby Connect] %s " %(origin, data.hex()))
    print("[%s:Lobby Connect] %s  %s %s %s %s" %(origin, timestampBig, r, g, b, name))
    logLine("[%s:Lobby Connect] %s  %s %s %s %s" %(origin, timestampBig, r, g, b, name))

    return data

def h_lobbyAction(data, origin):
    global globalStartIndex
    globalStartIndex = 4
    action = unpackData(data, 4)
    print("[%s:Lobby Action] %s" %(origin, "join" if action[0] == 8 else "skip"))

    return data

def h_seaAttack(data, origin):
    obj = messageTypes.deserialize(data, messageTypes.seaAttack)
    print("[%s:Sea Attack] flag?=%s x=%s y=%s" %(origin, obj["flag?"], obj["X"], obj["Y"]))
    logLine("[%s:Sea Attack] flag?=%s x=%s y=%s" %(origin, obj["flag?"], obj["X"], obj["Y"]))

    return data

def h_landAttack(data, origin):
    obj = messageTypes.deserialize(data, messageTypes.landAttack)
    print("[%s:Land Attack] count=%s player_id=%s " %(origin, obj["count"], obj["player_id"]))
    logLine("[%s:Land Attack] count=%s player_id=%s " %(origin, obj["count"], obj["player_id"]))

    return data

handlers = {
    0x10: h_lobbyConnect,
    #0x80: h_lobbyAction,
    0x90: h_seaAttack,
    0x80: h_landAttack
}


def getHandlerId(packetId):
    return packetId[0] & PACKET_TYPEMASK


def unpackData(data, size):
    global globalStartIndex 
    result = getBitData(data, globalStartIndex, size)
    globalStartIndex += size
    return result 

def getBitData(data, startIndex, size):
    resultSize = math.ceil(size / 8) * 8
    resultBitIndex = resultSize - size

    result = [0x00] * math.ceil(size / 8)
    for i in range(startIndex, startIndex+size):
        currentDataByteIndex = getByteOffset(i)
        currentResultByteIndex = getByteOffset(resultBitIndex)

        shiftRightAmount = 7 - i % 8
        shiftLeftAmount = (resultSize - 1 - resultBitIndex) % 8

        currentDataByte = data[currentDataByteIndex]
        currentDataByteBits = byteToBitString(currentDataByte)

        extractedBit = currentDataByte >> shiftRightAmount & 1

        result[currentResultByteIndex] |= extractedBit << shiftLeftAmount
        resultBitIndex += 1

    return result

def dataToBitStringStartCount(data, start, count):
    result = dataToBitString(data)
    newResult = ""
    bitIndex = start
    currentBitIndex = math.ceil(count / 8) * 8 - count
    
    for i in range(currentBitIndex):
        newResult += "0"

    for i in range(start, start + count , +1):
        newResult += result[bitIndex]
        if (bitIndex + 1) % 8 == 0:
            bitIndex +=1
        if (currentBitIndex +1) % 8 == 0:
            newResult += " "
            pass
        bitIndex+=1
        currentBitIndex+=1
    return newResult


def dataToBitString(data):
    result = ""
    for i in range(len(data)):
        result += byteToBitString(data[i]) + " "
    return result

def byteToBitString(byteData):
    resultStr = ""
    for i in range(7, -1, -1):
        resultStr += str((byteData >> i) & 1)
    return resultStr

def getByteOffset(bitOffset):
    return math.floor(bitOffset / 8)

def parse(data, origin):
    #print("Parser Called")
    
    try:    
        packet_id = struct.unpack("c", data[0:1])[0]
        packet_id = getHandlerId(packet_id)

        #print("Parser %s" %packet_id)
    except Exception as e:
        print("=--------------Parser Exception--------------=")
        print(e)
        print("=--------------Parser Exception--------------=")



    if packet_id not in handlers:
        print("[%s] %s" %(origin, data.hex()))
    else:
        data = handlers.get(packet_id)(data, origin)
        
    #print("Parser end")
    return data


if __name__ == '__main__':
    #data = bytearray(b'42edc28a60')
    data =  bytearray.fromhex('52edc206617670aa5add7bc02e79ab031e274ecb38e05e258802c088288000982a0800')

    parse(data, "")
    
    exit()
    testDate = getBitData(data,24,11)

    print(testDate)
    print(dataToBitString(testDate))

    print(data)
    print(dataToBitString(data))
    print(dataToBitStringStartCount(data,0,15))

    resultBitData = getBitData(data, 0, 15)

    print(dataToBitString(resultBitData))
    print(resultBitData)

"""
6d6b 0100 000000000000 00 10 00 477265617442616c6c734f664669726500872ac7000c5ac70000a14300000080000064000000
6d6b 0200 000000000000 00 0c 00 4c6f73744361766542757368  002351c700d62cc70000b34300000000000064000000
6d6b 0300 000000000000 00 09 00 426561724368657374        00b0f6c500e27b470070264523fde67f810064000000
6d6b 0400 000000000000 00 08 00 436f774368657374          00fe764800a16fc80040924422fe088fc5fd64000000
6d6b 0500 000000000000 00 09 00 4c6176614368657374        00bc464700d8a3c50060be440000e338000064000000
6d6b 0600 000000000000 00 0b 00 426c6f636b79436865737400f03ec500bab34600300e45000000c0000064000000
6d6b 0700 000000000000 00 0c 00 47756e53686f704f776e6572005712c700048dc6000017450000ff7f000064000000
6d6b 0800 000000000000 00 0f 00 4a757374696e546f6c657261626c65007c20c700007ec600e00d450000aa6a000064000000
6d6b 0900 000000000000 00 06 00 4661726d65720062a84600102147005005450000e338000064000000
6d6b 0a00 000000000000 00 0d 00 4d69636861656c416e67656c6fc0277e48c0ba72c800e0b0440000c751000064000000
6d6b 0b00 000000000000 00 0a 00 476f6c64656e4567673100aac3c6004a8d460000824300000000000064000000
6d6b 0c00 000000000000 00 0a 00 476f6c64656e45676732007249c7001f6fc700e09c4500000000000064000000
6d6b 0d00 000000000000 00 0a 00 476f6c64656e456767330080bf46001988470030264500000000000064000000
6d6b 0e00 000000000000 00 0a 00 476f6c64656e4567673400256c47000288c600b0374500000000000064000000
6d6b 0f00 000000000000 00 0a 00 476f6c64656e456767350040be4400d869460070db4500000000000064000000
6d6b 1000 000000000000 00 0a 00 476f6c64656e4567673600503546002c4dc60080cd4300000000000064000000
6d6b 1100 000000000000 00 0a 00 476f6c64656e4567673780ed8dc7003f51c700a0cd4400000000000064000000
6d6b 1200 000000000000 00 0a 00 476f6c64656e4567673800143d4700aadb460000304400000000000064000000
6d6b 1300 000000000000 00 0a 00 476f6c64656e4567673900c97e470060b3c500009a4500000000000064000000
6d6b 1400 000000000000 00 0e 00 42616c6c6d65725065616b45676700a02dc5006c2cc60020244600000000000064000000
6d6b 1500 000000000000 00 11 00 42616c6c6d65725065616b506f7374657200a8bec500302bc60030264600000000000064000000
6d6b f333 000000000000 01 04 00 42656172 8b4c7ac6750b31479c5e67440000000000007d000000
6d6b f433 000000000000 01 04 00 42656172 9b2267c63b607c47bde4f6440000000000007d000000
6d6b f533 000000000000 01 04 00 42656172 5a8b2745af668247fe2e20450000000000007d000000
6d6b f633 000000000000 01 04 00 42656172 d49bf8c5cb0e3947d5b3f4440000000000007d000000
6d6b f733 000000000000 01 04 00 42656172 501d0fc5aa474647b17402450000000000007d000000
6d6b f833 000000000000 01 04 00 42656172 8fce6dc612185a476e345f440000000000007d000000
6d6b f933 000000000000 01 04 00 42656172 77c1ac41bb516947e5291b450000000000007d000000
6d6b fa33 000000000000 01 04 00 42656172 1b7953c6b96e8947a73826450000000000007d000000
6d6b fb33 000000000000 01 04 00 42656172 5065bdc3c3818947ab5938450000000000007d000000
6d6b fc33 000000000000 01 04 00 42656172 0098ebc580038e4707891c450000000000007d000000
6d6b fd33 000000000000 01 04 00 42656172 f39be5c5002f62474cb0f2440000000000007d0000007374f3330000030052756e007374f4330000030052756e007374f5330000030052756e007374f6330000030052756e007374f7330000030052756e007374f8330000030052756e007374f9330000030052756e007374fa330000030052756e007374fb330000030052756e007374fc330000030052756e007374fd330000030052756e007073f4330000642167c6215f7c4772e3f64400004bfa00000900dfff00007073fc3300002f90ebc534038e4707891c4500004bfa00001d00eeff00007073f5330000a77c2745586682470f2f204500004bfa0000e5ffecff00007073f6330000ef9ef8c5b80d3947f0b3f44400004bfa0000f4ffe0ff00007073f7330000b60c0fc525484647b67402450000b40500001f000e0000007073f8330000ead06dc60d195a4782305f440000b4050000eeff1d0000007073f93300007823ab41db5269477c291b450000b4050000faff220000007073fa330000ed7753c62c6e8947c735264500004bfa00000900dfff00007073f33300001b507ac6bd0a31475f62674400004bfa0000e5ffeaff00007073fb33000026f2bcc31d828947005b38450000b40500001b00150000007073fd33000019a5e5c5082f624795aef2440000b4050000deff010000000000
[server] 
7073 8c330000 ecbe05c6 7be53a47 d018ec44 0000ba8b 000073ff b4ff0000 
7073 8d330000 d228fbc4 3c684a47 44a70145 00006c35 00002900 9b000000 
7073 8e330000 a0c171c6 ac3f5e47 45766844 00008149 0000dbff 9c000000 
7073 8f330000 0fcd4544 40ba6947 e50a1845 00007f05 00000000 00000000 
7073 90330000 6f9f54c6 9f318847 08601e45 00009700 0000a000 02000000 
7073 91330000 b286b5c4 a7c78947 20f23845 0000b97a 00000000 00000000 
7073 92330000 178eccc5 cee78e47 ac871e45 00008e11 00009100 43000000 
7073 93330000 3650e9c5 41f05d47 f079f544 000092bb 0000efff 61ff0000 
7073 89330000 58e772c6 f7312d47 6d7b7b44 00003ed2 00004500 70ff0000 
7073 8a330000 64a466c6 de2d7e47 8f7bfa44 0000383d 00000b00 a0000000 
7073 8b330000 84e71345 f9d78047 05752045 0000b4b0 00000000 00000000 0000
[server] 
7073 8c330000 9cf705c6 dfdd3a47 03ebeb44 00001394 000073ff b4ff0000 
7073 8d330000 b9a4fac4 c8774a47 71a50145 00006c35 00002900 9b000000 
7073 8e330000 81d071c6 524f5e47 2add6844 00008149 0000dbff 9c000000 
7073 8f330000 0fcd4544 40ba6947 e50a1845 00007f05 00000000 00000000 
7073 90330000 195f54c6 bd318847 e6801e45 00009700 0000a000 02000000 
7073 91330000 b286b5c4 a7c78947 20f23845 0000b97a 00000000 00000000 
7073 92330000 2b19ccc5 2aeb8e47 90921e45 00008e11 00009100 43000000 
7073 93330000 2a5ee9c5 44e05d47 f181f544 000092bb 0000efff 61ff0000 
7073 89330000 7ccb72c6 77232d47 e1ca7b44 00003ed2 00004500 70ff0000 
7073 8a330000 00a066c6 ea3d7e47 f29efa44 0000383d 00000b00 a0000000 
7073 8b330000 84e71345 f9d78047 05752045 0000b4b0 00000000 00000000 0000
[server] 
7073 8c330000 741d06c6 cbd83a47 70cceb44 00001394 000073ff b4ff0000 
7073 8d330000 8d4cfac4 28824a47 39a40145 00006c35 00002900 9b000000 
7073 8e330000 6fda71c6 c4595e47 d9216944 00008149 0000dbff 9c000000 
7073 8f330000 0fcd4544 40ba6947 e50a1845 00007f05 00000000 00000000 
7073 90330000 273454c6 d1318847 d7961e45 00009700 0000a000 02000000 
7073 91330000 b286b5c4 a7c78947 20f23845 0000b97a 00000000 00000000 
7073 92330000 1fcbcbc5 68ed8e47 469a1e45 00008e11 00009100 43000000 
7073 93330000 7a67e9c5 98d55d47 4787f544 000092bb 0000efff 61ff0000 
7073 89330000 e4b872c6 c9192d47 eaff7b44 00003ed2 00004500 70ff0000 
7073 8a330000 129d66c6 a0487e47 91b6fa44 0000383d 00000b00 a0000000 
7073 8b330000 84e71345 f9d78047 05752045 0000b4b0 00000000 00000000 0000
FB: 2a69 10 00 477265617442616c6c734f6646697265 6a359f40a44c794200000000
FB: 2a69 10 00 477265617442616c6c734f6646697265 82b4394054a1b8c2327a6535
SL: 2a69 0a 00 5374617469634c696e6b             82b4394054a1b8c2327a6535      
RE: 2a69 0d 00 52656d6f74654578706c6f6974       82b4394054a1b8c2327a6535      
unknown packet: 016d76655d2747012b604719df95449a04e70b00000000
unknown packet: 006d76655d2747012b6047ef1ea1449a04e70b00000000
unknown packet: 016d76655d2747012b6047ddb4b1449a04e70b00000000
unknown packet: 006d76655d2747012b6047bbcf17459a04e70b00000000
unknown packet: 016d76655d2747012b60471a2b20459a04e70b00000000
unknown packet: 006d76655d2747012b6047181c60459a04e70b00000000
[client(3002)] 6a70016d760c372c4790104a477e0bfa43a9015db100000000
[client(3002)] 6a70006d760c372c4790104a47fe781b44a9015db100000000
jump: 1 | 6d76655d2747012b604725c8f244b6f7af3b00000000
jump: 0 | 6d76655d2747012b604752a91445b6f7af3b00000000
jump: 1 | 6d76655d2747012b6047bbce3645b6f7af3b00000000
jump: 0 | 6d76655d2747012b60472f665345b6f7af3b00000000
walking:
               id   x        y        z        looking  ?    key
[client(3002)] 6d76 a0722d47 092a4b47 cc4cc542 a9015db1 0000 0000
[client(3002)] 6d76 da702d47 50254b47 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 7a6c2d47 aa194b47 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 a45a2d47 27ea4a47 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 973c2d47 169a4a47 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 a70d2d47 111d4a47 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 d0d12c47 b47d4947 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 6b952c47 d9dc4847 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 1e512c47 ec264847 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 8bfb2b47 02434747 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 9aa92b47 c3684647 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 671f2b47 b1f84447 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 05b02a47 08d04347 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 457c2a47 32464347 cc4cc542 a9015db1 0000 7f00
[client(3002)] 6d76 b75c2a47 25f24247 cc4cc542 a9015db1 0000 0000
[client(3002)] 6d76 b75c2a47 25f24247 cc4cc542 a9015db1 0000 0000
[client(3002)] 6d76 b75c2a47 25f24247 cc4cc542 a9015db1 0000 0000
[client(3002)] 6d76 b75c2a47 25f24247 cc4cc542 a9015db1 0000 0000
[client(3002)] 6d76 b75c2a47 25f24247 cc4cc542 a9015db1 0000 0000
[client(3002)] 6d76 b75c2a47 25f24247 cc4cc542 a9015db1 0000 0000
[client(3002)] 6d76 b75c2a47 25f24247 cc4cc542 a9015db1 0000 0000
walking:
[client(3002)] 6d76 21eb3047784c48 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 abd83047685348 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 97b53047956048 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 236730470b7e48 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 22163047749c48 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 4be02f47aab048 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 327a2f47fed648 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 a7d52e47c51449 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 90002e47c66449 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 0c762d47c89849 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 1a722c4763fa49 47cc4cc542a9015db10000 0081
[client(3002)] 6d76 5b3e2c47d10d4a 47cc4cc542a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a 47cc4cc542a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a 47cc4cc542a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a 47cc4cc542a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a 47cc4cc542a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a 47cc4cc542a9015db10000 0000
jumping:
[client(3002)] 6a70016d760c372c4790104a477e0bfa43a9015db100000000
[client(3002)] 6a70006d760c372c4790104a47fe781b44a9015db100000000
[client(3002)] 6d76 0c372c4790104a47 f648fd43 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 036c0b44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 1b234144 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 b8c44d44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 f6f85744 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 d3226844 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 10247144 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 ffc27544 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 11f87a44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 ea197c44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 36627b44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 f1317a44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 c67d7744 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 31b06c44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 d2645c44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 73364b44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 de014144 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 e4153544 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 c6d71a44 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 1a44f743 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 254cb343 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 bc3c8c43 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 9efbcd42 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 cd4cc542 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 cd4cc542 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 cd4cc542 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 cd4cc542 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 cd4cc542 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 cd4cc542 a9015db10000 0000
[client(3002)] 6d76 0c372c4790104a47 cd4cc542 a9015db10000 0000
looking around:
               id   x        y        z        looking  ?    key
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 1d0ad6ca 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 1909b9cb 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 50072ccc 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 690515cc 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 6902f1c9 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 2101eec7 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 5a00d6c5 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 2d00d7c4 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 abff34c2 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 afff79c0 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 4100bbbe 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 ed0084bd 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 ed0084bd 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 ed0084bd 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 d60084bd 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 d60084bd 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 d60084bd 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 d60084bd 0000 0000
[client(3002)] 6d76 0c372c47 90104a47 cc4cc542 d60084bd 0000 0000
"""